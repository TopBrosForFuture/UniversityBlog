---
// Recibir las imágenes como props con valor por defecto
const { images = [] } = Astro.props;

// Validar que images sea un array
const validImages = Array.isArray(images) ? images : [];
---

<div class="w-full max-w-[700px] overflow-hidden rounded-xl shadow-lg mx-auto bg-white">
  {validImages.length > 0 ? (
    <div
      id="carousel"
      class="flex transition-transform duration-1000 ease-in-out"
    >
      {validImages.map((img, i) => (
        <div class="w-full flex-shrink-0 rounded-xl p-2 box-border">
          <img
            src={img.src}
            alt={`Imagen ${i + 1}`}
            class="w-full h-[300px] object-contain rounded-xl"
          />
        </div>
      ))}
    </div>
  ) : (
    <div class="w-full h-[300px] flex items-center justify-center text-gray-500">
      No hay imágenes para mostrar
    </div>
  )}
</div>


<script is:inline>
  document.addEventListener('DOMContentLoaded', () => {
    const carousel = document.getElementById('carousel');
    if (!carousel) return;

    const slides = carousel.children.length;
    let index = 0;

    function showSlide(i) {
      const slideWidth = carousel.parentElement.clientWidth;
      carousel.style.transform = `translateX(-${i * slideWidth}px)`;
    }

    function nextSlide() {
      index = (index + 1) % slides;
      showSlide(index);
    }

    // Mostrar la primera slide
    showSlide(index);

    // Cambio cada 5 segundos
    setInterval(nextSlide, 5000);
  });
</script>
